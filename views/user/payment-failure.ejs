<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Not Completed - Luxury Fashion</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Montserrat:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        body {
            background-color: #f8f8f8;
            font-family: 'Montserrat', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            color: #1a1a1a;
        }

        .payment-container {
            width: 450px;
            background: #ffffff;
            text-align: center;
            padding: 50px 40px;
            border-radius: 0;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            animation: fadeIn 0.8s ease-in-out;
            position: relative;
            border: 1px solid #e0e0e0;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .brand-logo {
            margin-bottom: 30px;
            font-family: 'Playfair Display', serif;
            font-size: 24px;
            letter-spacing: 2px;
            font-weight: 700;
            color: #1a1a1a;
        }

        .status-icon {
            width: 80px;
            height: 80px;
            background: #f8f8f8;
            border: 1px solid #e0e0e0;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 25px;
        }

        .status-icon svg {
            width: 30px;
            height: 30px;
            color: #1a1a1a;
        }

        h2 {
            color: #1a1a1a;
            font-family: 'Playfair Display', serif;
            font-weight: 600;
            margin-bottom: 15px;
            font-size: 24px;
            letter-spacing: 0.5px;
        }

        .subtitle {
            font-size: 14px;
            color: #666;
            margin-bottom: 30px;
            font-weight: 400;
        }

        .order-details {
            background: #fafafa;
            padding: 25px;
            margin: 25px 0;
            font-size: 13px;
            color: #333;
            text-align: left;
            border: 1px solid #eaeaea;
        }

        .order-details p {
            margin: 10px 0;
            display: flex;
            justify-content: space-between;
            font-weight: 500;
            color: #555;
        }

        .order-details strong {
            font-weight: 600;
            color: #1a1a1a;
        }

        .error-message {
            color: #666;
            font-size: 13px;
            font-weight: 400;
            margin-bottom: 30px;
            line-height: 1.6;
        }

        .btn-custom {
            width: 100%;
            padding: 14px;
            font-size: 13px;
            font-weight: 600;
            letter-spacing: 1px;
            transition: all 0.3s ease;
            border: none;
            outline: none;
            cursor: pointer;
            text-transform: uppercase;
            margin-bottom: 12px;
        }

        .retry-btn {
            background: #1a1a1a;
            color: white;
        }

        .retry-btn:hover {
            background: #333;
        }

        .orders-btn {
            background: transparent;
            color: #1a1a1a;
            border: 1px solid #1a1a1a;
        }

        .orders-btn:hover {
            background: #f2f2f2;
        }

        .divider {
            width: 40px;
            height: 1px;
            background: #d0d0d0;
            margin: 30px auto;
        }

        .footer-text {
            font-size: 11px;
            color: #999;
            margin-top: 30px;
        }

        @media (max-width: 576px) {
            .payment-container {
                width: 90%;
                padding: 40px 25px;
            }
        }
    </style>
</head>
<body>
    <div class="payment-container">
        <div class="brand-logo">Aks</div>
        
        <div class="status-icon">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </div>
        
        <h2>Payment Not Completed</h2>
        <p class="subtitle">We were unable to process your payment.</p>

        <div class="order-details">
            <p><span>Order Reference</span> <strong>#<%= orderId %></strong></p>
            <p><span>Amount</span> <strong>â‚¬<%= amount %></strong></p>
            <p><span>Payment Method</span> <strong><%= paymentMethod %></strong></p>
        </div>

        <p class="error-message">
            Your transaction could not be completed at this time. Please verify your payment details or select an alternative payment method.
        </p>

        <button onclick="retryPayment()" class="btn-custom retry-btn">Try Again</button>
        <a href="/myOrders" class="btn-custom orders-btn">View Orders</a>
        
        <div class="divider"></div>
        
        <p class="footer-text">For assistance, please contact our Client Services</p>
    </div>

    <script>
    async function retryPayment() {
        try {
            console.log("Initiating payment retry");

            const response = await fetch("/create-retry-order", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ 
                    amount: "<%= amount %>", 
                    currency: "INR",
                    orderId: "<%= orderId %>",
                }),
            });

            const data = await response.json();
            if (!data.success) throw new Error("Failed to create order");

            const options = {
                key: "<%=razorpayKeyId%>",
                amount: data.order.amount,
                currency: data.order.currency,
                order_id: data.order.id,
                name: "Maison Luxe",
                description: "Luxury Purchase",
                handler: async function (paymentResponse) {  
                    const paymentMethod = "<%= paymentMethod %>";
                    const addressId = "<%= addressId %>";

                    try {
                        const orderId = "<%= orderId %>";
                        
                        const response = await fetch('/retryPaymentSuccess', {
                            method: 'POST',
                            headers: { 'Content-type': 'application/json' },
                            body: JSON.stringify({ orderId, snum: 'retry' })
                        });

                        const result = await response.json();
                        console.log("response: ",result)
                        
                        if (result.success) {
                            Swal.fire({
                                title: "Payment Confirmed",
                                text: "Your order has been successfully processed.",
                                icon: "success",
                                confirmButtonColor: "#1a1a1a"
                            }).then(() => {
                                window.location.href = '/payment-success';
                            });
                            return;
                        }

                        Swal.fire({
                            title: "Transaction Error",
                            text: "We encountered an issue processing your payment. Please try again.",
                            icon: "error",
                            confirmButtonColor: "#1a1a1a"
                        });

                    } catch (error) {
                        Swal.fire({
                            title: "Transaction Failed",
                            text: "We were unable to process your order. Please try again later.",
                            icon: "error",
                            confirmButtonColor: "#1a1a1a"
                        });
                    }
                },
                prefill: {
                    email: "<%= userEmail %>",
                    contact: "<%= userPhone %>",
                },
                theme: {
                    color: "#1a1a1a",
                },
            };

            const rzp = new Razorpay(options);
            rzp.open();

        } catch (error) {
            Swal.fire({
                title: "Payment Service Unavailable",
                text: "We are unable to initialize the payment service at this time. Please try again later.",
                icon: "error",
                confirmButtonColor: "#1a1a1a"
            });
        }
    }
    </script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>