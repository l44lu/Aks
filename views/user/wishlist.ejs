<%- include("../../views/partials/user/header") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<title>My Wishlist | Luxury Fashion House</title>
<style>
/* General Styling */
body {
  font-family: 'Cormorant Garamond', 'Playfair Display', serif;
  background: #f9f9f9;
  margin: 0;
  padding: 0;
  color: #212121;
}

/* Wishlist Container */
.wishlist-container {
  max-width: 1400px;
  margin: 80px auto;
  padding: 40px;
  background: #fff;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.03);
}

/* Header Section */
.wishlist-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 30px;
  border-bottom: 1px solid #e0e0e0;
  margin-bottom: 40px;
  position: relative;
}

.wishlist-title {
  font-size: 32px;
  font-weight: 300;
  letter-spacing: 2px;
  text-transform: uppercase;
  color: #000;
}

.wishlist-count {
  font-size: 14px;
  padding: 8px 16px;
  background: #000;
  color: #fff;
  font-weight: 400;
  letter-spacing: 1px;
}

/* Products Grid */
.products-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 40px;
  margin-top: 40px;
}

/* Product Card */
.product-card {
  background: white;
  overflow: hidden;
  position: relative;
  transition: all 0.4s ease;
}

.product-card:hover {
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.08);
}

/* Remove Button */
.remove-btn {
  position: absolute;
  top: 15px;
  right: 15px;
  background: rgba(255, 255, 255, 0.9);
  border: none;
  width: 32px;
  height: 32px;
  font-size: 18px;
  cursor: pointer;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: 0.3s;
  color: #000;
}

.remove-btn:hover {
  background: #000;
  color: #fff;
}

/* Product Image */
.product-image {
  width: 100%;
  height: 400px;
  overflow: hidden;
  position: relative;
  background: #f9f9f9;
}

.product-image::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.02);
  opacity: 0;
  transition: opacity 0.4s;
}

.product-image:hover::after {
  opacity: 1;
}

.product-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.7s;
}

.product-image:hover img {
  transform: scale(1.03);
}

/* Product Info */
.product-info {
  padding: 25px 15px;
  text-align: center;
}

.product-name {
  font-size: 16px;
  color: #000;
  font-weight: 400;
  letter-spacing: 1px;
  text-transform: uppercase;
  margin-bottom: 15px;
}

.product-pricing {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  margin: 15px 0;
}

.current-price {
  font-size: 18px;
  font-weight: 500;
  color: #000;
}

.original-price {
  font-size: 14px;
  color: #888;
  text-decoration: line-through;
}

.discount {
  font-size: 12px;
  color: #a67c52;
  font-weight: 500;
  letter-spacing: 1px;
  padding: 3px 8px;
  border: 1px solid #a67c52;
}

/* Add to Bag Button */
.add-to-bag {
  width: 100%;
  background: #000;
  border: none;
  padding: 14px;
  color: #fff;
  font-size: 13px;
  font-weight: 400;
  letter-spacing: 2px;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 0.3s;
  position: relative;
  overflow: hidden;
}

.add-to-bag:hover {
  background: #333;
}

.add-to-bag:active {
  background: #000;
}

/* Empty Wishlist */
.empty-wishlist {
  text-align: center;
  padding: 100px 20px;
  background: #fff;
}

.empty-wishlist h2 {
  font-size: 24px;
  color: #000;
  margin-bottom: 15px;
  font-weight: 300;
  letter-spacing: 2px;
  text-transform: uppercase;
}

.empty-wishlist p {
  color: #555;
  margin-bottom: 40px;
  max-width: 500px;
  margin-left: auto;
  margin-right: auto;
  font-size: 15px;
  line-height: 1.6;
}

.start-shopping-btn {
  display: inline-block;
  margin-top: 10px;
  padding: 14px 30px;
  background: #000;
  color: white;
  text-decoration: none;
  font-weight: 400;
  letter-spacing: 2px;
  text-transform: uppercase;
  font-size: 14px;
  transition: all 0.3s;
}

.start-shopping-btn:hover {
  background: #333;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
  margin-top: 60px;
}

.page-btn {
  background: #000;
  color: white;
  padding: 12px 24px;
  text-decoration: none;
  font-weight: 400;
  letter-spacing: 1px;
  text-transform: uppercase;
  font-size: 12px;
  transition: all 0.3s;
}

.page-btn:hover {
  background: #333;
}

.current-page {
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 1px;
  color: #000;
}

/* Size Selection Modal Customization */
.swal-custom-popup {
  border-radius: 0;
  padding: 30px;
}

.swal-confirm-btn {
  background: #000 !important;
  color: white !important;
  border-radius: 0 !important;
  padding: 12px 25px !important;
  font-weight: 400 !important;
  letter-spacing: 2px !important;
  text-transform: uppercase !important;
  font-size: 13px !important;
}

.swal-cancel-btn {
  background: white !important;
  color: #000 !important;
  border: 1px solid #000 !important;
  border-radius: 0 !important;
  padding: 12px 25px !important;
  font-weight: 400 !important;
  letter-spacing: 2px !important;
  text-transform: uppercase !important;
  font-size: 13px !important;
}

/* Responsive Design */
@media (max-width: 992px) {
  .wishlist-container {
    margin: 60px auto;
    padding: 30px;
  }
  
  .products-grid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 30px;
  }
  
  .product-image {
    height: 350px;
  }
}

@media (max-width: 768px) {
  .wishlist-container {
    margin: 40px 15px;
    padding: 25px;
  }
  
  .wishlist-header {
    flex-direction: column;
    text-align: center;
  }
  
  .wishlist-title {
    margin-bottom: 15px;
    font-size: 28px;
  }
  
  .wishlist-count {
    margin-top: 8px;
  }
  
  .products-grid {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 25px;
  }
  
  .product-image {
    height: 280px;
  }
}

@media (max-width: 480px) {
  .products-grid {
    grid-template-columns: 1fr;
    gap: 30px;
  }
  
  .product-info {
    padding: 20px 10px;
  }
}
</style>

<div class="wishlist-container">
  <div class="wishlist-header">
    <h1 class="wishlist-title">My Selections</h1>
    <% if (products && products.length > 0) { %>
      <span class="wishlist-count"><%= products.length %> ITEMS</span>
    <% } %>
  </div>

  <% if (products && products.length > 0) { %>
    <div class="products-grid">
      <% products.forEach(product => { %>
        <div class="product-card">
          <button class="remove-btn" onclick="confirmRemove('<%= product._id %>')">×</button>
          <div class="product-image">
            <a href="/productDetails?id=<%= product._id %>">
              <img src="/uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>">
            </a>
          </div>
          <div class="product-info">
            <h3 class="product-name"><%= product.productName %></h3>
            <div class="product-pricing">
              <span class="current-price">₹<%= product.salePrice %></span>
              <% if (product.salePrice !== product.regularPrice) { %>
                <span class="original-price">₹<%= product.regularPrice %></span>
                <span class="discount"><%= Math.round((1 - product.salePrice / product.regularPrice) * 100) %>% OFF</span>
              <% } %>
            </div>
            <button class="add-to-bag" 
              onclick='addToCart("<%= product._id %>", "<%= product.salePrice %>", `<%= JSON.stringify(product.sizes.map(s => s.size)) %>`)'>
              ADD TO SHOPPING BAG
            </button>
          </div>
        </div>
      <% }); %>
    </div>
  <% } else { %>
    <div class="empty-wishlist">
      <h2>Your wishlist is empty</h2>
      <p>Curate your personal collection by adding your favorite pieces to your wishlist.</p>
      <a href="/shop" class="start-shopping-btn">Explore Collection</a>
    </div>
  <% } %>
</div>
<div class="pagination">
  <% if (currentPage > 1) { %>
    <a href="?page=<%= currentPage - 1 %>" class="page-btn">Previous</a>
  <% } %>

  <span class="current-page">Page <%= currentPage %> of <%= totalPages %></span>

  <% if (currentPage < totalPages) { %>
    <a href="?page=<%= currentPage + 1 %>" class="page-btn">Next</a>
  <% } %>
</div>

<%- include("../../views/partials/user/footer") %>
<script>
async function addToCart(productId, productPrice, availableSizes) {
      try {
          availableSizes = JSON.parse(availableSizes);
      } catch (error) {
          console.error("Error parsing availableSizes:", error);
          return;
      }
  
  
  if (!Array.isArray(availableSizes) || availableSizes.length === 0) {
    Swal.fire({
      title: "No Sizes Available",
      text: "This product does not have selectable sizes.",
      icon: "warning",
      confirmButtonText: "OK"
    });
    return;
  }
  
  let sizeButtonsHtml = availableSizes.map(size => `
    <button class="size-btn" data-size="${size}">${size}</button>
  `).join('');
  
  const { value: selectedSize } = await Swal.fire({
  title: "<h2 style='color: #000; font-weight: 300; letter-spacing: 2px; text-transform: uppercase; font-size: 24px;'>Select Size</h2>",
  html: `
    <div style="
      display: flex; 
      gap: 12px; 
      flex-wrap: wrap; 
      justify-content: center; 
      padding: 20px;
      max-width: 400px;
      margin: auto;
    ">
      ${sizeButtonsHtml}
    </div>
    <style>
      .size-btn {
        padding: 12px 16px;
        min-width: 50px;
        font-size: 14px;
        font-weight: 400;
        letter-spacing: 1px;
        border: 1px solid #ddd;
        background: white;
        color: #000;
        cursor: pointer;
        transition: all 0.3s ease;
        margin: 5px;
      }
      .size-btn:hover {
        border-color: #000;
      }
      .size-btn.selected {
        background: #000;
        color: white;
        border-color: #000;
      }
    </style>
  `,
  showCancelButton: true,
  confirmButtonText: "ADD TO BAG",
  cancelButtonText: "CANCEL",
  customClass: {
    popup: "swal-custom-popup",
    confirmButton: "swal-confirm-btn",
    cancelButton: "swal-cancel-btn",
  },
  didOpen: () => {
    document.querySelectorAll(".size-btn").forEach(btn => {
      btn.addEventListener("click", function () {
        document.querySelectorAll(".size-btn").forEach(b => b.classList.remove("selected"));
        this.classList.add("selected");
      });
    });
  },
  preConfirm: () => {
    const selected = document.querySelector(".size-btn.selected");
    console.log("Selected size:", selected ? selected.dataset.size : "None");
    if (!selected) {
      Swal.showValidationMessage("Please select a size");
      return false;
    }
    return selected.dataset.size;
  },
});


console.log("Final Selected Size:", selectedSize); 
if (!selectedSize) return;

  try {
    console.log("Sending data to API:", { productId, productPrice, selectedSize });
    const response = await fetch('/addToCart', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ productId, productPrice, selectedSize })
    });

    console.log("Response received:", response);

    const result = await response.json();

    console.log("Parsed response:", result);
    if (response.ok) {
      Swal.fire({
        title: "Added to Shopping Bag",
        text: `Size ${selectedSize} added successfully`,
        icon: "success",
        timer: 2000,
        toast: true,
        position: "top-end",
        showConfirmButton: false,
        background: "#000",
        color: "#fff",
      }).then(()=>{
        window.location.reload();
      })
    } else {
      throw new Error(result.message || "Please try again.");
    }
  } catch (error) {
    console.error("Error in addToCart:", error);
    Swal.fire({
      title: "Unable to Add Item",
      text: error.message,
      icon: "error",
      timer: 2000,
      toast: true,
      position: "top-end",
      showConfirmButton: false,
    });
  }
}
</script>


<script>
  function confirmRemove(productId) {
    Swal.fire({
      title: "Remove Item?",
      text: "This item will be removed from your wishlist",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#000",
      cancelButtonColor: "#fff",
      confirmButtonText: "REMOVE",
      cancelButtonText: "CANCEL",
      customClass: {
        popup: "swal-custom-popup",
        confirmButton: "swal-confirm-btn",
        cancelButton: "swal-cancel-btn",
      },
    }).then((result) => {
      if (result.isConfirmed) {
        window.location.href = `/removeWishlist?productId=${productId}`;
      }
    })
  }
</script>