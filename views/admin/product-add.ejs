<%- include("../../views/partials/admin/header") %>

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        :root {
            --primary-bg: #1a1a1a;
            --card-bg: #212121;
            --input-bg: #2a2a2a;
            --border-color: #3a3a3a;
            --text-color: #e0e0e0;
            --title-color: #ffffff;
            --accent-color: #969696;
            --hover-color: #497dc0;
            --shadow-color: rgba(0, 0, 0, 0.6);
        }
        
        body {
            background: var(--primary-bg);
            color: var(--text-color);
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
        }
        
        .dashboard-container {
            max-width: 1200px;
            margin: 40px auto;
            padding: 0 20px;
        }
        
        .content-header {
            margin-bottom: 30px;
            position: relative;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--border-color);
        }
        
        .content-title {
            font-size: 32px;
            font-weight: 700;
            color: var(--title-color);
            margin-bottom: 10px;
            letter-spacing: 0.5px;
            position: relative;
            display: inline-block;
        }
        
        .content-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 331px;
            height: 4px;
            background: #5d5d5d;
            border-radius: 2px;
        }
        
        .card {
            background: var(--card-bg);
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 10px 20px var(--shadow-color);
            margin-bottom: 30px;
            transition: transform 0.3s, box-shadow 0.3s;
            border: 1px solid var(--border-color);
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px var(--shadow-color);
        }
        
        .card-header {
            padding: 20px 25px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            background: rgb(149 149 149 / 10%);
        }
        
        .card-header h4 {
            margin-left: 210px;
            font-size: 18px;
            font-weight: 600;
            color: var(--title-color);
            display: flex;
            align-items: center;
        }
        
        .card-header h4 i {
            margin-right: 10px;
            color: var(--accent-color);
        }
        
        .card-body {
            padding: 30px;
        }
        
        .form-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 25px;
        }
        
        .form-group {
            margin-bottom: 0;
        }
        
        .full-width {
            grid-column: span 2;
        }
        
        .form-label {
            display: block;
            font-weight: 500;
            margin-bottom: 10px;
            color: var(--text-color);
            font-size: 14px;
        }
        
        .form-control, .form-select {
            width: 100%;
            background: var(--input-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 14px 16px;
            color: var(--text-color);
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(92, 152, 231, 0.2);
            outline: none;
        }
        
        .form-control::placeholder {
            color: #6a6a6a;
        }
        
        .error-message {
            color: #ff6b6b;
            font-size: 12px;
            margin-top: 5px;
            display: block;
        }
        
        .btn {
            padding: 14px 32px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s;
            border: none;
            cursor: pointer;
            color: white;
            background: rgb(58, 104, 255);
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-top: 30px;
        }
                
        .btn-primary {
            background: var(--accent-color);
            color: white;
        }
        
        .btn-primary:hover {
            background: var(--hover-color);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(92, 152, 231, 0.4);
        }
        
        .image-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
        }
        
        .image-upload {
            background: var(--input-bg);
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            border: 2px dashed var(--border-color);
            transition: all 0.3s;
        }
        
        .image-upload:hover {
            border-color: var(--accent-color);
        }
        
        .image-preview {
            width: 100%;
            height: 120px;
            border-radius: 8px;
            background: #333;
            object-fit: cover;
            margin: 12px 0;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
        }
        
        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .image-preview::before {
            content: 'Preview';
            color: #777;
            font-size: 14px;
        }
        
        .image-cropper {
            margin-top: 10px;
            padding: 15px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background: var(--card-bg);
        }
        
        .btn-sm {
            padding: 8px 16px;
            font-size: 14px;
            margin-top: 10px;
        }
        
        textarea.form-control {
            min-height: 120px;
            resize: vertical;
        }
        
        .action-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            margin-top: 30px;
        }
        
        .edit-preview-btn {
            position: absolute;
            bottom: 5px;
            right: 5px;
            background: rgba(0,0,0,0.6);
            color: white;
            border: none;
            border-radius: 4px;
            padding: 3px 8px;
            font-size: 12px;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.3s;
        }
        
        .image-preview:hover .edit-preview-btn {
            opacity: 1;
        }
        
        .cropper-container {
            max-height: 300px;
            overflow: hidden;
        }
        
        .cropper-controls {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 10px;
        }
        
        @media (max-width: 991px) {
            .image-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .form-container {
                grid-template-columns: 1fr;
            }
            
            .full-width {
                grid-column: span 1;
            }
        }
        
        @media (max-width: 767px) {
            .dashboard-container {
                margin: 20px auto;
            }
            
            .content-title {
                font-size: 24px;
            }
            
            .card-body {
                padding: 20px;
            }
            
            .image-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>

<section class="content-main dashboard-container">
    <div class="content-header">
        <h2 class="content-title">Add New Product</h2>
        <p>Complete the form below to add a new product to your inventory</p>
    </div>
    
    <div class="card">
        <div class="card-body">
            <form method="POST" action="/admin/addProduct" enctype="multipart/form-data" id="productForm">
                <div class="form-container">
                    <div class="form-group">
                        <label for="product_name" class="form-label">Product Name</label>
                        <input type="text" placeholder="Enter product name" name="productName" class="form-control" id="product_name">
                        <div id="productName-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Category</label>
                        <select class="form-select" name="category" id="category">
                            <option value="">Select Category</option>
                            <% if (cat && cat.length > 0) { %>
                                <% cat.forEach(category => { %>
                                    <option value="<%= category.name %>"><%= category.name %></option>
                                <% }); %>
                            <% } %>
                        </select>
                        <div id="category-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Regular Price</label>
                        <input placeholder="Enter regular price" name="regularPrice" type="text" class="form-control">
                        <div id="regularPrice-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Sale Price</label>
                        <input placeholder="Enter sale price (optional)" name="salePrice" type="text" class="form-control">
                        <div id="salePrice-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Quantity</label>
                        <input placeholder="Enter stock quantity" name="quantity" type="number" min="0" class="form-control">
                        <div id="quantity-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Color</label>
                        <input name="color" placeholder="Enter product color" type="text" class="form-control">
                        <div id="color-error" class="error-message"></div>
                    </div>

                    <div class="form-group full-width">
                        <label class="form-label">Full Description</label>
                        <textarea placeholder="Enter detailed product description" id="descriptionid" name="description" class="form-control" rows="4"></textarea>
                        <div id="description-error" class="error-message"></div>
                    </div>

                    <div class="form-group full-width">
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4><i class="fas fa-images"></i> Product Images</h4>
                            </div>
                            <div class="card-body">
                                <div class="image-grid">
                                    <div class="image-upload">
                                        <label class="form-label">Main Image</label>
                                        <input class="form-control" type="file" name="image" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                        <div class="image-preview">
                                            <img src="" alt="" id="imgView1">
                                            <button type="button" class="edit-preview-btn" onclick="editImage(1)">Edit</button>
                                        </div>
                                        <div class="image-cropper" id="cropper-container1" style="display:none;">
                                            <div class="cropper-container">
                                                <img src="" id="cropperImg1" alt="">
                                            </div>
                                            <div class="cropper-controls">
                                                <button type="button" id="rotateLeftBtn1" class="btn-sm btn-primary" onclick="rotateImage(-90, 1)">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                                <button type="button" id="rotateRightBtn1" class="btn-sm btn-primary" onclick="rotateImage(90, 1)">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="saveButton1" class="btn-sm btn-primary">Save Crop</button>
                                                <button type="button" id="cancelButton1" class="btn-sm btn-primary" onclick="cancelCrop(1)">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="image-upload">
                                        <label class="form-label">Image 2</label>
                                        <input class="form-control" type="file" name="image" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                                        <div class="image-preview">
                                            <img src="" alt="" id="imgView2">
                                            <button type="button" class="edit-preview-btn" onclick="editImage(2)">Edit</button>
                                        </div>
                                        <div class="image-cropper" id="cropper-container2" style="display:none;">
                                            <div class="cropper-container">
                                                <img src="" id="cropperImg2" alt="">
                                            </div>
                                            <div class="cropper-controls">
                                                <button type="button" id="rotateLeftBtn2" class="btn-sm btn-primary" onclick="rotateImage(-90, 2)">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                                <button type="button" id="rotateRightBtn2" class="btn-sm btn-primary" onclick="rotateImage(90, 2)">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="saveButton2" class="btn-sm btn-primary">Save Crop</button>
                                                <button type="button" id="cancelButton2" class="btn-sm btn-primary" onclick="cancelCrop(2)">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="image-upload">
                                        <label class="form-label">Image 3</label>
                                        <input class="form-control" type="file" name="image" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                                        <div class="image-preview">
                                            <img src="" alt="" id="imgView3">
                                            <button type="button" class="edit-preview-btn" onclick="editImage(3)">Edit</button>
                                        </div>
                                        <div class="image-cropper" id="cropper-container3" style="display:none;">
                                            <div class="cropper-container">
                                                <img src="" id="cropperImg3" alt="">
                                            </div>
                                            <div class="cropper-controls">
                                                <button type="button" id="rotateLeftBtn3" class="btn-sm btn-primary" onclick="rotateImage(-90, 3)">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                                <button type="button" id="rotateRightBtn3" class="btn-sm btn-primary" onclick="rotateImage(90, 3)">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="saveButton3" class="btn-sm btn-primary">Save Crop</button>
                                                <button type="button" id="cancelButton3" class="btn-sm btn-primary" onclick="cancelCrop(3)">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="image-upload">
                                        <label class="form-label">Image 4</label>
                                        <input class="form-control" type="file" name="image" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)">
                                        <div class="image-preview">
                                            <img src="" alt="" id="imgView4">
                                            <button type="button" class="edit-preview-btn" onclick="editImage(4)">Edit</button>
                                        </div>
                                        <div class="image-cropper" id="cropper-container4" style="display:none;">
                                            <div class="cropper-container">
                                                <img src="" id="cropperImg4" alt="">
                                            </div>
                                            <div class="cropper-controls">
                                                <button type="button" id="rotateLeftBtn4" class="btn-sm btn-primary" onclick="rotateImage(-90, 4)">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                                <button type="button" id="rotateRightBtn4" class="btn-sm btn-primary" onclick="rotateImage(90, 4)">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="saveButton4" class="btn-sm btn-primary">Save Crop</button>
                                                <button type="button" id="cancelButton4" class="btn-sm btn-primary" onclick="cancelCrop(4)">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="images-error" class="error-message"></div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="action-buttons">
                    <button class="btn" type="button" onclick="validateAndSubmit()">
                        <i class="fas fa-save mr-2"></i> Publish Product
                    </button>
                </div>
            </form>
        </div>
    </div>
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
<script>
    const cropperInstances = {};
    const originalImages = {};
    
    function viewImage(event, index) {
        if (!event.target.files || !event.target.files[0]) return;
        
        const file = event.target.files[0];
        const imgView = document.getElementById(`imgView${index}`);
        
        // Store the original file for reference
        originalImages[index] = file;
        
        // Show preview
        imgView.src = URL.createObjectURL(file);
        
        // Set up cropper
        setupCropper(file, index);
    }
    
    function setupCropper(file, index) {
        const reader = new FileReader();
        reader.onload = function() {
            const dataURL = reader.result;
            const cropperImg = document.getElementById(`cropperImg${index}`);
            cropperImg.src = dataURL;
            
            if (cropperInstances[index]) {
                cropperInstances[index].destroy();
            }
            
            cropperInstances[index] = new Cropper(cropperImg, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 0.8,
                zoomable: true,
                rotatable: true
            });
            
            const saveButton = document.getElementById(`saveButton${index}`);
            saveButton.onclick = function() {
                saveCroppedImage(index);
            };
        };
        reader.readAsDataURL(file);
    }
    
    function editImage(index) {
        const imgView = document.getElementById(`imgView${index}`);
        const cropperContainer = document.getElementById(`cropper-container${index}`);
        
        // If there's an image to edit
        if (imgView.src) {
            // If we don't have the cropper set up yet but have an image
            if (!cropperInstances[index] && originalImages[index]) {
                setupCropper(originalImages[index], index);
            }
            
            // Show the cropper
            cropperContainer.style.display = "block";
        }
    }
    
    function saveCroppedImage(index) {
        const cropper = cropperInstances[index];
        if (!cropper) return;
        
        const imgView = document.getElementById(`imgView${index}`);
        const croppedCanvas = cropper.getCroppedCanvas({
            width: 300,
            height: 300,
            fillColor: '#fff'
        });
        
        // Update the preview image with cropped version
        imgView.src = croppedCanvas.toDataURL("image/jpeg", 0.9);
        
        // Convert to blob and store it for form submission
        croppedCanvas.toBlob(function(blob) {
            // Create a global variable to store the blob
            if (!window.croppedBlobs) {
                window.croppedBlobs = {};
            }
            
            window.croppedBlobs[index] = blob;
            
            // Hide the cropper
            document.getElementById(`cropper-container${index}`).style.display = "none";
        }, 'image/jpeg', 0.9);
    }
    
    function cancelCrop(index) {
        // Hide the cropper without saving changes
        document.getElementById(`cropper-container${index}`).style.display = "none";
    }
    
    function rotateImage(degree, index) {
        const cropper = cropperInstances[index];
        if (cropper) {
            cropper.rotate(degree);
        }
    }
    
    function validateAndSubmit() {
    if (validateForm()) {
        // If we have cropped images, add them to the form
        if (window.croppedBlobs) {
            const form = document.getElementById('productForm');
            const formData = new FormData(form);
            
            // Remove the original files
            formData.delete('image');
            
            // Add cropped files if available, otherwise use originals
            for (let i = 1; i <= 4; i++) {
                const input = document.getElementById(`input${i}`);
                if (window.croppedBlobs[i]) {
                    const fileName = `cropped-img-${new Date().getTime()}-${i}.jpg`;
                    formData.append('image', window.croppedBlobs[i], fileName);
                } else if (input.files && input.files[0]) {
                    formData.append('image', input.files[0]);
                }
            }
            
            // Submit via fetch
            fetch('/admin/addProduct', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    return response.json();
                }
            })
            .then(data => {
                if (data && data.error) {
                    alert(data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        } else {
            // If no cropped images, submit normally
            document.getElementById('productForm').submit();
        }
    }
}
    
    function validateForm() {
        clearErrorMessages();
        let isValid = true;
        
        const name = document.getElementsByName('productName')[0].value;
        const description = document.getElementById('descriptionid').value;
        const regularPrice = document.getElementsByName('regularPrice')[0].value;
        const salePrice = document.getElementsByName('salePrice')[0].value;
        const quantity = document.getElementsByName('quantity')[0].value;
        const color = document.getElementsByName('color')[0].value;
        const category = document.getElementById('category').value;
        const mainImage = document.getElementById('input1').files;
        
        if (name.trim() === "") {
            displayErrorMessage('productName-error', 'Please enter a product name.');
            isValid = false;
        }
        
        if (description.trim() === "") {
            displayErrorMessage('description-error', 'Please enter a product description.');
            isValid = false;
        }
        
        if (quantity.trim() === "" || isNaN(parseInt(quantity)) || parseInt(quantity) < 0) {
            displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
            isValid = false;
        }
        
        if (!regularPrice.trim() || !/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) < 0) {
            displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }
        
        if (salePrice.trim() !== "") {
            if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            } else if (parseFloat(regularPrice) <= parseFloat(salePrice)) {
                displayErrorMessage('salePrice-error', 'Sale price must be less than regular price.');
                isValid = false;
            }
        }
        
        if (color.trim() === "") {
            displayErrorMessage('color-error', 'Please enter a color.');
            isValid = false;
        }
        
        if (category === "") {
            displayErrorMessage('category-error', 'Please select a category.');
            isValid = false;
        }
        
        if (mainImage.length === 0) {
            displayErrorMessage('images-error', 'Please select at least the main product image.');
            isValid = false;
        }
        
        return isValid;
    }
    
    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        if (errorElement) {
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }
    }
    
    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
        });
    }
</script>

<%- include("../../views/partials/admin/footer") %>