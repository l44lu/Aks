<%- include("../../views/partials/admin/header") %>

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        :root {
            --primary-bg: #1a1a1a;
            --card-bg: #212121;
            --input-bg: #2a2a2a;
            --border-color: #3a3a3a;
            --text-color: #e0e0e0;
            --title-color: #ffffff;
            --accent-color: #969696;
            --hover-color: #497dc0;
            --shadow-color: rgba(0, 0, 0, 0.6);
        }
        
        body {
            background: var(--primary-bg);
            color: var(--text-color);
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
        }
        
        .dashboard-container {
            max-width: 1200px;
            margin: 40px auto;
            padding: 0 20px;
        }
        
        .content-header {
            margin-bottom: 30px;
            position: relative;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--border-color);
        }
        
        .content-title {
            font-size: 32px;
            font-weight: 700;
            color: var(--title-color);
            margin-bottom: 10px;
            letter-spacing: 0.5px;
            position: relative;
            display: inline-block;
        }
        
        .content-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 331px;
            height: 4px;
            background: #5d5d5d;
            border-radius: 2px;
        }
        
        .card {
            background: var(--card-bg);
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 10px 20px var(--shadow-color);
            margin-bottom: 30px;
            transition: transform 0.3s, box-shadow 0.3s;
            border: 1px solid var(--border-color);
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px var(--shadow-color);
        }
        
        .card-header {
            padding: 20px 25px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            background: rgb(149 149 149 / 10%);
        }
        
        .card-header h4 {
            margin-left: 210px;
            font-size: 18px;
            font-weight: 600;
            color: var(--title-color);
            display: flex;
            align-items: center;
        }
        
        .card-header h4 i {
            margin-right: 10px;
            color: var(--accent-color);
        }
        
        .card-body {
            padding: 30px;
        }
        
        .form-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 25px;
        }
        
        .form-group {
            margin-bottom: 0;
        }
        
        .full-width {
            grid-column: span 2;
        }
        
        .form-label {
            display: block;
            font-weight: 500;
            margin-bottom: 10px;
            color: var(--text-color);
            font-size: 14px;
        }
        
        .form-control, .form-select {
            width: 100%;
            background: var(--input-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 14px 16px;
            color: var(--text-color);
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(92, 152, 231, 0.2);
            outline: none;
        }
        
        .form-control::placeholder {
            color: #6a6a6a;
        }
        
        .error-message {
            color: #ff6b6b;
            font-size: 12px;
            margin-top: 5px;
            display: block;
        }
        
        .btn {
            padding: 14px 32px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s;
            border: none;
            cursor: pointer;
            color: white;
            background: rgb(58, 104, 255);
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-top: 30px;
        }
                
        .btn-primary {
            background: var(--accent-color);
            color: white;
        }
        
        .btn-primary:hover {
            background: var(--hover-color);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(92, 152, 231, 0.4);
        }
        
        .image-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
        }
        
        .image-upload {
            background: var(--input-bg);
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            border: 2px dashed var(--border-color);
            transition: all 0.3s;
        }
        
        .image-upload:hover {
            border-color: var(--accent-color);
        }
        
        .image-preview {
            width: 100%;
            height: 120px;
            border-radius: 8px;
            background: #333;
            object-fit: cover;
            margin: 12px 0;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
        }
        
        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .image-preview::before {
            content: 'Preview';
            color: #777;
            font-size: 14px;
        }
        
        .image-cropper {
            margin-top: 10px;
            padding: 15px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background: var(--card-bg);
        }
        
        .btn-sm {
            padding: 8px 16px;
            font-size: 14px;
            margin-top: 10px;
        }
        
        textarea.form-control {
            min-height: 120px;
            resize: vertical;
        }
        
        .action-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            margin-top: 30px;
        }
        
        .edit-preview-btn {
            position: absolute;
            bottom: 5px;
            right: 5px;
            background: rgba(0,0,0,0.6);
            color: white;
            border: none;
            border-radius: 4px;
            padding: 3px 8px;
            font-size: 12px;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.3s;
        }
        
        .image-preview:hover .edit-preview-btn {
            opacity: 1;
        }
        
        .cropper-container {
            max-height: 300px;
            overflow: hidden;
        }
        
        .cropper-controls {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 10px;
        }
        
        /* New styles for variants */
        .variant-container {
            background: rgba(42, 42, 42, 0.5);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
            border: 1px solid var(--border-color);
            position: relative;
        }
        
        .variant-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .variant-title {
            font-size: 16px;
            font-weight: 600;
            color: var(--text-color);
        }
        
        .variant-row {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .remove-variant {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(255, 0, 0, 0.2);
            color: #ff6b6b;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .remove-variant:hover {
            background: rgba(255, 0, 0, 0.4);
        }
        
        .variant-divider {
            height: 1px;
            background: var(--border-color);
            margin: 15px 0;
        }
        
        .add-variant-btn {
            background: rgba(73, 125, 192, 0.2);
            color: var(--hover-color);
            border: 1px dashed var(--hover-color);
            border-radius: 8px;
            padding: 12px;
            width: 100%;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 500;
        }
        
        .add-variant-btn:hover {
            background: rgba(73, 125, 192, 0.3);
        }
        
        .add-variant-btn i {
            margin-right: 8px;
        }
        
        .variant-type-selector {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .variant-type-option {
            background: var(--input-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 10px 15px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .variant-type-option.active {
            background: var(--hover-color);
            border-color: var(--hover-color);
        }
        
        @media (max-width: 991px) {
            .image-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .form-container {
                grid-template-columns: 1fr;
            }
            
            .full-width {
                grid-column: span 1;
            }
            
            .variant-row {
                grid-template-columns: 1fr;
            }
        }
        
        @media (max-width: 767px) {
            .dashboard-container {
                margin: 20px auto;
            }
            
            .content-title {
                font-size: 24px;
            }
            
            .card-body {
                padding: 20px;
            }
            
            .image-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>

<section class="content-main dashboard-container">
    <div class="content-header">
        <h2 class="content-title">Add New Product</h2>
        <p>Complete the form below to add a new product to your inventory</p>
    </div>
    
    <div class="card">
        <div class="card-body">
            <form method="POST" action="/admin/addProduct" enctype="multipart/form-data" id="productForm">
                <div class="form-container">
                    <div class="form-group">
                        <label for="product_name" class="form-label">Product Name</label>
                        <input type="text" placeholder="Enter product name" name="productName" class="form-control" id="product_name">
                        <div id="productName-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Category</label>
                        <select class="form-select" name="category" id="category">
                            <option value="">Select Category</option>
                            <% if (cat && cat.length > 0) { %>
                                <% cat.forEach(category => { %>
                                    <option value="<%= category.name %>"><%= category.name %></option>
                                <% }); %>
                            <% } %>
                        </select>
                        <div id="category-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Regular Price</label>
                        <input placeholder="Enter regular price" name="regularPrice" type="text" class="form-control">
                        <div id="regularPrice-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Sale Price</label>
                        <input placeholder="Enter sale price (optional)" name="salePrice" type="text" class="form-control">
                        <div id="salePrice-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Color</label>
                        <input name="color" placeholder="Enter default product color" type="text" class="form-control">
                        <div id="color-error" class="error-message"></div>
                    </div>

                    <div class="form-group full-width">
                        <label class="form-label">Full Description</label>
                        <textarea placeholder="Enter detailed product description" id="descriptionid" name="description" class="form-control" rows="4"></textarea>
                        <div id="description-error" class="error-message"></div>
                    </div>

                    <!-- Product Variants Section -->
                    <div class="form-group full-width">
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4><i class="fas fa-cubes"></i> Product Variants</h4>
                            </div>
                            <div class="card-body">
                                <div class="variant-type-selector">
                                    <div class="form-group">
                                        <label class="form-label">Do you want to add variants?</label>
                                        <select class="form-select" id="has-variants" name="hasVariants">
                                            <option value="false">No, this is a simple product</option>
                                            <option value="true">Yes, this product has variants</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <div id="variants-section" style="display: none;">
                                    <div class="form-group" id="variant-attributes">
                                        <label class="form-label">Select variant attributes</label>
                                        <div class="variant-row">
                                            <div>
                                                <input type="checkbox" id="size-attribute" name="variantAttributes" value="size">
                                                <label for="size-attribute">Size</label>
                                            </div>
                                            <div>
                                                <input type="checkbox" id="color-attribute" name="variantAttributes" value="color">
                                                <label for="color-attribute">Color</label>
                                            </div>
                                            <div>
                                                <input type="checkbox" id="material-attribute" name="variantAttributes" value="material">
                                                <label for="material-attribute">Material</label>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div id="simple-quantity-field" style="display: block;">
                                        <div class="form-group">
                                            <label class="form-label">Quantity</label>
                                            <input placeholder="Enter stock quantity" name="quantity" type="number" min="0" class="form-control">
                                            <div id="quantity-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    
                                    <div id="variants-container" style="display: none;">
                                        <!-- Variant items will be added here -->
                                    </div>
                                    
                                    <button type="button" class="add-variant-btn" id="add-variant-btn">
                                        <i class="fas fa-plus"></i> Add Variant
                                    </button>
                                    <div id="variants-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group full-width">
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4><i class="fas fa-images"></i> Product Images</h4>
                            </div>
                            <div class="card-body">
                                <div class="image-grid">
                                    <div class="image-upload">
                                        <label class="form-label">Main Image</label>
                                        <input class="form-control" type="file" name="image" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                        <div class="image-preview">
                                            <img src="" alt="" id="imgView1">
                                            <button type="button" class="edit-preview-btn" onclick="editImage(1)">Edit</button>
                                        </div>
                                        <div class="image-cropper" id="cropper-container1" style="display:none;">
                                            <div class="cropper-container">
                                                <img src="" id="cropperImg1" alt="">
                                            </div>
                                            <div class="cropper-controls">
                                                <button type="button" id="rotateLeftBtn1" class="btn-sm btn-primary" onclick="rotateImage(-90, 1)">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                                <button type="button" id="rotateRightBtn1" class="btn-sm btn-primary" onclick="rotateImage(90, 1)">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="saveButton1" class="btn-sm btn-primary">Save Crop</button>
                                                <button type="button" id="cancelButton1" class="btn-sm btn-primary" onclick="cancelCrop(1)">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="image-upload">
                                        <label class="form-label">Image 2</label>
                                        <input class="form-control" type="file" name="image" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                                        <div class="image-preview">
                                            <img src="" alt="" id="imgView2">
                                            <button type="button" class="edit-preview-btn" onclick="editImage(2)">Edit</button>
                                        </div>
                                        <div class="image-cropper" id="cropper-container2" style="display:none;">
                                            <div class="cropper-container">
                                                <img src="" id="cropperImg2" alt="">
                                            </div>
                                            <div class="cropper-controls">
                                                <button type="button" id="rotateLeftBtn2" class="btn-sm btn-primary" onclick="rotateImage(-90, 2)">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                                <button type="button" id="rotateRightBtn2" class="btn-sm btn-primary" onclick="rotateImage(90, 2)">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="saveButton2" class="btn-sm btn-primary">Save Crop</button>
                                                <button type="button" id="cancelButton2" class="btn-sm btn-primary" onclick="cancelCrop(2)">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="image-upload">
                                        <label class="form-label">Image 3</label>
                                        <input class="form-control" type="file" name="image" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                                        <div class="image-preview">
                                            <img src="" alt="" id="imgView3">
                                            <button type="button" class="edit-preview-btn" onclick="editImage(3)">Edit</button>
                                        </div>
                                        <div class="image-cropper" id="cropper-container3" style="display:none;">
                                            <div class="cropper-container">
                                                <img src="" id="cropperImg3" alt="">
                                            </div>
                                            <div class="cropper-controls">
                                                <button type="button" id="rotateLeftBtn3" class="btn-sm btn-primary" onclick="rotateImage(-90, 3)">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                                <button type="button" id="rotateRightBtn3" class="btn-sm btn-primary" onclick="rotateImage(90, 3)">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="saveButton3" class="btn-sm btn-primary">Save Crop</button>
                                                <button type="button" id="cancelButton3" class="btn-sm btn-primary" onclick="cancelCrop(3)">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="image-upload">
                                        <label class="form-label">Image 4</label>
                                        <input class="form-control" type="file" name="image" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)">
                                        <div class="image-preview">
                                            <img src="" alt="" id="imgView4">
                                            <button type="button" class="edit-preview-btn" onclick="editImage(4)">Edit</button>
                                        </div>
                                        <div class="image-cropper" id="cropper-container4" style="display:none;">
                                            <div class="cropper-container">
                                                <img src="" id="cropperImg4" alt="">
                                            </div>
                                            <div class="cropper-controls">
                                                <button type="button" id="rotateLeftBtn4" class="btn-sm btn-primary" onclick="rotateImage(-90, 4)">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                                <button type="button" id="rotateRightBtn4" class="btn-sm btn-primary" onclick="rotateImage(90, 4)">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                                <button type="button" id="saveButton4" class="btn-sm btn-primary">Save Crop</button>
                                                <button type="button" id="cancelButton4" class="btn-sm btn-primary" onclick="cancelCrop(4)">Cancel</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="images-error" class="error-message"></div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="action-buttons">
                    <button class="btn" type="button" onclick="validateAndSubmit()">
                        <i class="fas fa-save mr-2"></i> Publish Product
                    </button>
                </div>
            </form>
        </div>
    </div>
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
<script>
    const cropperInstances = {};
    const originalImages = {};
    let variantCounter = 0;
    let selectedAttributes = [];
    
    // Initialize handlers for variant functionality
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle variants section based on selection
        document.getElementById('has-variants').addEventListener('change', function() {
            const hasVariants = this.value === 'true';
            document.getElementById('variants-section').style.display = hasVariants ? 'block' : 'none';
            document.getElementById('simple-quantity-field').style.display = hasVariants ? 'none' : 'block';
            document.getElementById('variants-container').style.display = hasVariants ? 'block' : 'none';
            
            // Clear existing variants if switching to no variants
            if (!hasVariants) {
                document.getElementById('variants-container').innerHTML = '';
            }
        });
        
        // Handle variant attribute selection
        const attributeCheckboxes = document.querySelectorAll('input[name="variantAttributes"]');
        attributeCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                updateSelectedAttributes();
                // Clear existing variants when attributes change
                document.getElementById('variants-container').innerHTML = '';
                variantCounter = 0;
            });
        });
        
        // Add variant button
        document.getElementById('add-variant-btn').addEventListener('click', addVariant);
    });
    
    function updateSelectedAttributes() {
        selectedAttributes = [];
        const attributeCheckboxes = document.querySelectorAll('input[name="variantAttributes"]:checked');
        attributeCheckboxes.forEach(checkbox => {
            selectedAttributes.push(checkbox.value);
        });
    }
    
    function addVariant() {
        updateSelectedAttributes();
        
        if (selectedAttributes.length === 0) {
            displayErrorMessage('variants-error', 'Please select at least one variant attribute');
            return;
        }
        
        variantCounter++;
        const variantId = `variant-${variantCounter}`;
        
        const variantDiv = document.createElement('div');
        variantDiv.className = 'variant-container';
        variantDiv.id = variantId;
        
        let variantHtml = `
            <div class="variant-header">
                <div class="variant-title">Variant #${variantCounter}</div>
            </div>
            <button type="button" class="remove-variant" onclick="removeVariant('${variantId}')">
                <i class="fas fa-times"></i>
            </button>
        `;
        
        // Add fields for each selected attribute
        variantHtml += `<div class="variant-row">`;
        
        selectedAttributes.forEach(attribute => {
            variantHtml += `
                <div class="form-group">
                    <label class="form-label">${attribute.charAt(0).toUpperCase() + attribute.slice(1)}</label>
                    <input type="text" class="form-control" name="variants[${variantCounter}][${attribute}]" placeholder="Enter ${attribute}">
                </div>
            `;
        });
        
        // Always add price adjustment and quantity
        variantHtml += `
                <div class="form-group">
                    <label class="form-label">Price Adjustment</label>
                    <input type="text" class="form-control" name="variants[${variantCounter}][priceAdjustment]" placeholder="e.g. +10, -5, or leave blank">
                </div>
                <div class="form-group">
                    <label class="form-label">Quantity</label>
                    <input type="number" min="0" class="form-control" name="variants[${variantCounter}][quantity]" placeholder="Enter quantity">
                </div>
            </div>
        `;
        
        variantDiv.innerHTML = variantHtml;
        document.getElementById('variants-container').appendChild(variantDiv);
    }
    
    function removeVariant(variantId) {
        const variantElement = document.getElementById(variantId);
        if (variantElement) {
            variantElement.remove();
        }
    }
    
    function viewImage(event, index) {
        if (!event.target.files || !event.target.files[0]) return;
        
        const file = event.target.files[0];
        const imgView = document.getElementById(`imgView${index}`);
        
        // Store the original file for reference
        originalImages[index] = file;
        
        // Show preview
        imgView.src = URL.createObjectURL(file);
        
        // Set up cropper
        setupCropper(file, index);
    }
    
    function setupCropper(file, index) {
        const reader = new FileReader();
        reader.onload = function() {
            const dataURL = reader.result;
            const cropperImg = document.getElementById(`cropperImg${index}`);
            cropperImg.src = dataURL;
            
            if (cropperInstances[index]) {
                cropperInstances[index].destroy();
            }
            
            cropperInstances[index] = new Cropper(cropperImg, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                autoCropArea: 0.8,
                responsive: true
            });
            
            // Setup save button
            document.getElementById(`saveButton${index}`).onclick = function() {
                const canvas = cropperInstances[index].getCroppedCanvas({
                    width: 600,
                    height: 600
                });
                
                canvas.toBlob(function(blob) {
                    // Create a new File object
                    const croppedFile = new File([blob], originalImages[index].name, {
                        type: originalImages[index].type,
                        lastModified: new Date().getTime()
                    });
                    
                    // Replace the original file in the input
                    const container = new DataTransfer();
                    container.items.add(croppedFile);
                    document.getElementById(`input${index}`).files = container.files;
                    
                    // Update preview
                    const imgView = document.getElementById(`imgView${index}`);
                    imgView.src = URL.createObjectURL(croppedFile);
                    
                    // Hide cropper
                    cancelCrop(index);
                });
            };
        };
        reader.readAsDataURL(file);
    }
    
    function editImage(index) {
        const input = document.getElementById(`input${index}`);
        if (input.files && input.files[0]) {
            document.getElementById(`cropper-container${index}`).style.display = 'block';
        }
    }
    
    function cancelCrop(index) {
        document.getElementById(`cropper-container${index}`).style.display = 'none';
    }
    
    function rotateImage(degree, index) {
        if (cropperInstances[index]) {
            cropperInstances[index].rotate(degree);
        }
    }
    
    function validateAndSubmit() {
        let isValid = true;
        const errors = {};
        
        // Validate product name
        const productName = document.getElementById('product_name').value.trim();
        if (!productName) {
            errors['productName'] = 'Product name is required';
            isValid = false;
        }
        
        // Validate category
        const category = document.getElementById('category').value.trim();
        if (!category) {
            errors['category'] = 'Category is required';
            isValid = false;
        }
        
        // Validate price
        const regularPrice = document.querySelector('input[name="regularPrice"]').value.trim();
        if (!regularPrice) {
            errors['regularPrice'] = 'Regular price is required';
            isValid = false;
        } else if (isNaN(parseFloat(regularPrice)) || parseFloat(regularPrice) < 0) {
            errors['regularPrice'] = 'Please enter a valid price';
            isValid = false;
        }
        
        // Validate sale price if provided
        const salePrice = document.querySelector('input[name="salePrice"]').value.trim();
        if (salePrice && (isNaN(parseFloat(salePrice)) || parseFloat(salePrice) < 0)) {
            errors['salePrice'] = 'Please enter a valid sale price';
            isValid = false;
        }
        
        // Validate main image
        const mainImage = document.getElementById('input1').files;
        if (!mainImage || mainImage.length === 0) {
            errors['images'] = 'Main product image is required';
            isValid = false;
        }
        
        // Validate description
        const description = document.getElementById('descriptionid').value.trim();
        if (!description) {
            errors['description'] = 'Product description is required';
            isValid = false;
        }
        
        // Validate variants if enabled
        const hasVariants = document.getElementById('has-variants').value === 'true';
        if (hasVariants) {
            const variantContainers = document.querySelectorAll('.variant-container');
            if (variantContainers.length === 0) {
                errors['variants'] = 'Please add at least one variant';
                isValid = false;
            }
        } else {
            // Validate quantity for simple products
            const quantity = document.querySelector('input[name="quantity"]').value.trim();
            if (!quantity) {
                errors['quantity'] = 'Quantity is required';
                isValid = false;
            } else if (isNaN(parseInt(quantity)) || parseInt(quantity) < 0) {
                errors['quantity'] = 'Please enter a valid quantity';
                isValid = false;
            }
        }
        
        // Display errors if any
        if (!isValid) {
            Object.keys(errors).forEach(key => {
                displayErrorMessage(`${key}-error`, errors[key]);
            });
            return;
        }
        
        // Submit the form if valid
        document.getElementById('productForm').submit();
    }
    
    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        if (errorElement) {
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }
    }
</script>

<%- include("../../views/partials/admin/footer") %>