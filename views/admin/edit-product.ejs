<%- include("../../views/partials/admin/header") %>
<head>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Include SweetAlert2 from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <style>
        :root {
            --primary-bg: #1a1a1a;
            --card-bg: #212121;
            --input-bg: #2a2a2a;
            --border-color: #3a3a3a;
            --text-color: #e0e0e0;
            --title-color: #ffffff;
            --accent-color: #a0a0a0;
            --hover-color: #c2c2c2;
            --shadow-color: rgba(0, 0, 0, 0.6);
            --primary-blue: #0088ff;
            --danger-color: #ff6b6b;
        }
        
        body {
            background: var(--primary-bg);
            color: var(--text-color);
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
        }
        
        .dashboard-container {
            max-width: 1200px;
            margin: 40px auto;
            padding: 0 30px;
        }
        
        .content-header {
            margin-bottom: 30px;
            position: relative;
        }
        
        .content-title {
            font-size: 28px;
            font-weight: 700;
            color: var(--title-color);
            margin-bottom: 10px;
            letter-spacing: 0.5px;
            position: relative;
            display: inline-block;
        }
        
        .content-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 235px;
            height: 4px;
            background: #747474;
            border-radius: 2px;
        }
        
        .card {
            background: var(--card-bg);
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 8px 16px var(--shadow-color);
            margin-bottom: 25px;
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .card:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 20px var(--shadow-color);
        }
        
        .card-header {
            padding: 18px 22px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .card-header h4 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
            color: var(--title-color);
            display: flex;
            align-items: center;
        }
        
        .card-header h4 i {
            margin-right: 12px;
            color: var(--primary-blue);
            font-size: 16px;
        }
        
        .card-body {
            padding: 22px;
        }
        
        .row {
            display: flex;
            flex-wrap: wrap;
            margin: 0 -12px;
        }
        
        .col-md-4, .col-md-6 {
            padding: 0 12px;
            box-sizing: border-box;
        }
        
        .col-md-4 {
            width: 33.333%;
        }
        
        .col-md-6 {
            width: 50%;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            font-weight: 500;
            margin-bottom: 8px;
            color: var(--text-color);
            font-size: 14px;
        }
        
        .form-control, .form-select {
            width: 100%;
            background: var(--input-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 12px 15px;
            color: var(--text-color);
            font-size: 14px;
            transition: all 0.3s;
            box-sizing: border-box;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 3px rgba(0, 136, 255, 0.2);
            outline: none;
        }
        
        .error-message {
            color: var(--danger-color);
            font-size: 12px;
            margin-top: 5px;
            display: block;
        }
        
        .btn {
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 15px;
            transition: all 0.3s;
            border: none;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }
        
        .btn i {
            margin-right: 8px;
        }
        
        .btn-primary {
            background: var(--primary-blue);
            color: white;
        }
        
        .btn-danger {
            background: var(--danger-color);
            color: white;
        }
        
        .btn-primary:hover {
            background: #0077e6;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 136, 255, 0.4);
        }
        
        .btn-sm {
            padding: 8px 16px;
            font-size: 13px;
        }
        
        /* Image upload section improvements */
        .section-title {
            font-weight: 600;
            margin-bottom: 18px;
            color: var(--title-color);
            font-size: 16px;
            padding-bottom: 10px;
            border-bottom: 1px solid var(--border-color);
        }
        
        .thumbnails-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 15px;
            margin-top: 15px;
            margin-bottom: 25px;
        }
        
        .thumbnail {
            position: relative;
            border-radius: 8px;
            overflow: hidden;
            border: 1px solid var(--border-color);
            aspect-ratio: 1;
        }
        
        .thumbnail img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .remove-image-btn {
            position: absolute;
            top: 8px;
            right: 8px;
            background: rgba(0, 0, 0, 0.7);
            border-radius: 50%;
            width: 26px;
            height: 26px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .remove-image-btn:hover {
            background: rgba(255, 0, 0, 0.8);
            transform: scale(1.1);
        }
        
        /* Image editing section improvements */
        #image-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .image-upload {
            background: var(--input-bg);
            border-radius: 10px;
            padding: 18px;
            border: 1px solid var(--border-color);
            transition: all 0.3s;
        }
        
        .image-upload:hover {
            border-color: var(--primary-blue);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .image-preview {
            width: 100%;
            aspect-ratio: 1;
            border-radius: 8px;
            background: #333;
            margin: 15px 0;
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
        }
        
        .image-preview::before {
            content: 'Preview';
            color: #777;
            font-size: 14px;
            position: absolute;
        }
        
        .image-preview img[src=""] + .image-preview::before {
            display: none;
        }
        
        .image-preview .edit-preview-btn,
        .image-preview .delete-btn {
            position: absolute;
            bottom: 10px;
            padding: 6px 12px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
            opacity: 0;
            transition: opacity 0.3s;
        }
        
        .image-preview:hover .edit-preview-btn,
        .image-preview:hover .delete-btn {
            opacity: 1;
        }
        
        .image-preview .edit-preview-btn {
            background: var(--primary-blue);
            color: white;
            left: 10px;
            border: none;
            cursor: pointer;
        }
        
        .image-preview .delete-btn {
            background: var(--danger-color);
            color: white;
            right: 10px;
        }
        
        .image-cropper {
            margin-top: 15px;
            background: rgba(0, 0, 0, 0.85);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 1000;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .cropper-container {
            height: 70vh;
            width: 70vw;
            max-width: 800px;
            background: #000;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .cropper-controls {
            margin-top: 20px;
            display: flex;
            gap: 15px;
        }
        
        .cropper-controls button {
            background: var(--primary-blue);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s;
        }
        
        .cropper-controls button:hover {
            background: #0077e6;
            transform: translateY(-2px);
        }
        
        .cropper-controls button:last-child {
            background: #444;
        }
        
        .cropper-controls button:last-child:hover {
            background: #555;
        }
        
        .mt-2 {
            margin-top: 10px;
        }
        
        .mt-4 {
            margin-top: 20px;
        }
        
        .px-5 {
            padding-left: 32px;
            padding-right: 32px;
        }
        
        .text-center {
            text-align: center;
        }
        
        .mb-5 {
            margin-bottom: 32px;
        }
        
        @media (max-width: 991px) {
            .col-md-4, .col-md-6 {
                width: 50%;
            }
            
            #image-container {
                grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            }
        }
        
        @media (max-width: 767px) {
            .dashboard-container {
                margin: 20px auto;
                padding: 0 15px;
            }
            
            .content-title {
                font-size: 24px;
            }
            
            .card-body {
                padding: 15px;
            }
            
            .row {
                margin: 0 -8px;
            }
            
            .col-md-4, .col-md-6 {
                width: 100%;
                padding: 0 8px;
            }
            
            #image-container {
                grid-template-columns: 1fr;
            }
            
            .cropper-container {
                width: 90vw;
                height: 60vh;
            }
        }
    </style>
</head>

<div class="dashboard-container">
    <div class="content-header">
        <h2 class="content-title">Edit Product</h2>
        <p>Update your product information and inventory</p>
    </div>
    
    <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data" id="editProductForm">
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-info-circle"></i> Basic Information</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" style="width:1155px" value="<%=product.productName%>" class="form-control" id="product_name" placeholder="Enter product name">
                            <span id="productName-error" class="error-message"></span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Full Description</label>
                    <textarea name="description" class="form-control" rows="4" placeholder="Enter product description"><%=product.description%></textarea>
                    <span id="description-error" class="error-message"></span>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Category</label>
                            <select class="form-select" name="category">
                                <% if (cat && cat.length > 0) { %>
                                    <% for (let i = 0; i < cat.length; i++) { %>
                                        <option value="<%= cat[i].name %>" <% if(cat[i].name === product.category) { %> selected <% } %>>
                                            <%= cat[i].name %>
                                        </option>
                                    <% } %>
                                <% } else { %>
                                    <option value="">No Categories Available</option>
                                <% } %>
                            </select>
                            <span id="category-error" class="error-message"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Color</label>
                            <input name="color" type="text" value="<%=product.color%>" class="form-control" placeholder="e.g. Red, Blue, Black">
                            <span id="color-error" class="error-message"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-tag"></i> Pricing & Inventory</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Regular Price ($)</label>
                            <input placeholder="0.00" name="regularPrice" type="text" value="<%=product.regularPrice%>" class="form-control">
                            <span id="regularPrice-error" class="error-message"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Sale Price ($)</label>
                            <input name="salePrice" type="text" value="<%=product.salePrice%>" class="form-control" placeholder="0.00">
                            <span id="salePrice-error" class="error-message"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Quantity</label>
                            <input name="quantity" type="text" value="<%=product.quantity%>" class="form-control" placeholder="0">
                            <span id="quantity-error" class="error-message"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-images"></i> Product Images</h4>
            </div>
            <div class="card-body">
                <div class="section-title">Current Images</div>
                <div class="thumbnails-container">
                    <% if(product.productImage && product.productImage.length > 0) { %>
                        <% for(let i = 0; i < product.productImage.length; i++) { %>
                            <div class="thumbnail">
                                <input type="hidden" value="<%=product.productImage[i].replace('_', '_/')%>" name="existingImages">
                                <img src="<%=product.productImage[i].replace('_', '_/')%>" alt="Product image">
                                <div class="remove-image-btn">
                                    <i class="fas fa-times" onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')"></i>
                                </div>
                            </div>
                        <% } %>
                    <% } else { %>
                        <p>No images available</p>
                    <% } %>
                </div>
                
                <div class="section-title mt-4">Add New Images</div>
                <div class="card-body">
                    <div id="image-container" class="image-grid">
                        <!-- Images will be added dynamically here -->
                    </div>
                    <button type="button" class="btn btn-primary mt-2" id="addImageBtn">Add Image</button>
                    <div id="images-error" class="error-message"></div>
                </div>
            </div>
        </div>
        
        <div class="text-center mb-5">
            <button class="btn btn-primary px-5" id="updatebtn" type="submit" onclick="validateFormAndSubmit()">
                <i class="fas fa-save mr-2"></i> Update Product
            </button>
        </div>
    </form>
</div>

<%- include("../../views/partials/admin/footer") %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>
    function deleteSingleImage(imageName, productId) {
        console.log("Delete request:", imageName, productId);

        Swal.fire({
            title: "Are you sure?",
            text: "This action cannot be undone!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            console.log("response: ",result)
            if (result.isConfirmed) {
                fetch("/admin/delete-image", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        imageNameToServer: imageName,  
                        productIdToServer: productId  
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status) {
                        Swal.fire({
                            title: "Deleted!",
                            text: "The image has been removed successfully.",
                            icon: "success",
                            timer: 2000,
                            showConfirmButton: false
                        });

                        // Remove the image from the UI
                        document.querySelectorAll(".thumbnail").forEach(thumbnail => {
                            let imgElement = thumbnail.querySelector("img");
                            if (imgElement && imgElement.src.includes(imageName.replace('_', '_/'))) {
                                thumbnail.remove();
                            }
                        });
                    } else {
                        Swal.fire("Failed!", "Could not delete image. Please try again.", "error");
                    }
                })
                .catch(error => {
                    console.error("Error deleting image:", error);
                    Swal.fire("Error!", "An unexpected error occurred.", "error");
                });
            }
        });
    }



    document.addEventListener("DOMContentLoaded", function () {
        
        function validateFormAndSubmit() {
            if (validateForm()) {
                document.getElementById('editProductForm').submit();
            }
        }


        

        function validateForm() {
            console.log("Validating form...");
            clearErrorMessages();

            const name = document.querySelector('[name="productName"]');
            const description = document.querySelector('[name="description"]');
            const price = document.querySelector('[name="regularPrice"]');
            const salePrice = document.querySelector('[name="salePrice"]');
            const color = document.querySelector('[name="color"]');
            const quantity = document.querySelector('[name="quantity"]');

            let isValid = true;

            if (!name || name.value.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            }

            if (!description || description.value.trim() === '') {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }

            if (!quantity || isNaN(parseInt(quantity.value)) || parseInt(quantity.value) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            if (!price || !/^\d+(\.\d{1,2})?$/.test(price.value) || parseFloat(price.value) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (salePrice && salePrice.value.trim() !== "" &&
                (!/^\d+(\.\d{1,2})?$/.test(salePrice.value) || parseFloat(salePrice.value) < 0)) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (!color || color.value.trim() === "") {
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            if (errorElement) {
                errorElement.innerText = message;
                errorElement.style.display = "block";
            }
        }

        function clearErrorMessages() {
            document.querySelectorAll('.error-message').forEach(element => {
                element.innerText = '';
            });
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        let imageCount = 0;
        const cropperInstances = {};
    
        document.getElementById("addImageBtn").addEventListener("click", function () {
            if (imageCount >= 5) {
                alert("You can add up to 5 images.");
                return;
            }
    
            imageCount++;
            addImageUploadField(imageCount);
        });
    
        function addImageUploadField(index) {
            const container = document.getElementById("image-container");
    
            const imageUploadDiv = document.createElement("div");
            imageUploadDiv.classList.add("image-upload");
            imageUploadDiv.setAttribute("id", `image-upload-${index}`);
            imageUploadDiv.innerHTML = `
                <label class="form-label">Image ${index}</label>
                <input class="form-control" type="file" name="image${index}" id="input${index}" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, ${index})">
                <div class="image-preview">
                    <img src="" alt="" id="imgView${index}">
                    <button type="button" class="edit-preview-btn" onclick="editImage(${index})">Edit</button>
                    <button type="button" class="delete-btn btn btn-danger" onclick="deleteImage(${index})">Delete</button>
                </div>
                <div class="image-cropper" id="cropper-container${index}" style="display:none;">
                    <div class="cropper-container">
                        <img src="" id="cropperImg${index}" alt="">
                    </div>
                    <div class="cropper-controls">
                        <button type="button" class="btn-sm btn-primary" onclick="rotateImage(-90, ${index})">
                            <i class="fas fa-undo"></i>
                        </button>
                        <button type="button" class="btn-sm btn-primary" onclick="rotateImage(90, ${index})">
                            <i class="fas fa-redo"></i>
                        </button>
                        <button type="button" id="saveButton${index}" class="btn-sm btn-primary">Save Crop</button>
                        <button type="button" class="btn-sm btn-primary" onclick="cancelCrop(${index})">Cancel</button>
                    </div>
                </div>
            `;
    
            container.appendChild(imageUploadDiv);
        }
    
        window.viewImage = function (event, index) {
            const input = event.target;
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById(`imgView${index}`).src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            }
        };
    
        window.editImage = function (index) {
            const input = document.getElementById(`input${index}`);
            if (input.files && input.files[0]) {
                setupCropper(input.files[0], index);
                document.getElementById(`cropper-container${index}`).style.display = "block";
            }
        };
    
        function setupCropper(file, index) {
            const reader = new FileReader();
            reader.onload = function () {
                const dataURL = reader.result;
                const cropperImg = document.getElementById(`cropperImg${index}`);
                cropperImg.src = dataURL;
    
                if (cropperInstances[index]) {
                    cropperInstances[index].destroy();
                }
    
                cropperInstances[index] = new Cropper(cropperImg, {
                    aspectRatio: 1,
                    viewMode: 1,
                    autoCropArea: 0.8,
                    zoomable: true,
                    rotatable: true
                });
    
                document.getElementById(`saveButton${index}`).onclick = function () {
                    saveCroppedImage(index);
                };
            };
            reader.readAsDataURL(file);
        }
    
        window.cancelCrop = function (index) {
            document.getElementById(`cropper-container${index}`).style.display = "none";
        };
    
        window.rotateImage = function (degree, index) {
            const cropper = cropperInstances[index];
            if (cropper) {
                cropper.rotate(degree);
            }
        };
    
        function saveCroppedImage(index) {
            const cropper = cropperInstances[index];
            if (!cropper) return;
    
            const imgView = document.getElementById(`imgView${index}`);
            const croppedCanvas = cropper.getCroppedCanvas({
                width: 300,
                height: 300,
                fillColor: '#fff'
            });
    
            imgView.src = croppedCanvas.toDataURL("image/jpeg", 0.9);
    
            croppedCanvas.toBlob(function (blob) {
                const fileInput = document.getElementById(`input${index}`);
                const file = new File([blob], `cropped-image-${index}.jpg`, { type: "image/jpeg" });
    
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                fileInput.files = dataTransfer.files;
    
                document.getElementById(`cropper-container${index}`).style.display = "none";
            }, 'image/jpeg', 0.9);
        }
    
        window.deleteImage = function (index) {
            const imageUploadDiv = document.getElementById(`image-upload-${index}`);
            if (imageUploadDiv) {
                imageUploadDiv.remove();
                delete cropperInstances[index];
                imageCount--;
            }
        };
    });
    </script>
